name: Deploy to ECS Blue/Green

on:
  push:
    branches:
      - main   # Change if your branch is different

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: manasvi/strapi-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Register new ECS task definition
        id: register-task
        run: |
          echo "Registering new task definition..."
          NEW_TASK_DEF=$(aws ecs register-task-definition \
            --family manasvi-strapi-task \
            --execution-role-arn arn:aws:iam::145065858967:role/ecsTaskExecutionRole \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "256" \
            --memory "512" \
            --container-definitions "[{\"name\":\"strapi\",\"image\":\"${{ steps.login-ecr.outputs.registry }}/manasvi/strapi-app:${{ github.sha }}\",\"essential\":true,\"portMappings\":[{\"containerPort\":1337,\"protocol\":\"tcp\"}]}]" \
            --query "taskDefinition.taskDefinitionArn" --output text)

          echo "NEW_TASK_DEF=$NEW_TASK_DEF" >> $GITHUB_ENV

      - name: Update TaskDefinition in appspec.json
        run: |
          echo "Updating TaskDefinition ARN in appspec.json..."
          sed -i "s|REPLACE_ME|${NEW_TASK_DEF}|g" appspec.json

      - name: Trigger CodeDeploy deployment
        run: |
          echo "Starting CodeDeploy deployment..."
          aws deploy create-deployment \
            --application-name manasvi-strapi-deploy-app \
            --deployment-group-name manasvi-strapi-blue-green \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --revision "revisionType=AppSpecContent,appSpecContent={\"content\":\"$(jq -c . appspec.json | sed 's/\"/\\\"/g')\"}" \
            --region ${{ env.AWS_REGION }}

